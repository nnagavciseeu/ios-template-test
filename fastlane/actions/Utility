# Povio Utility Actions
# version 1.3.0

default_platform(:ios)

platform :ios do
  def setVersionNumber(tag_name)
    version = ""
    if TAG_VERSION_N && tag_name != "unknown"
      version = tag_name.match(/[^\/]+(?=\.)/).to_s
    else
      version = get_version_number(xcodeproj: "#{PROJECT_NAME}.xcodeproj", target: TARGET_NAME)
    end
    
    increment_version_number(version_number: version)
  end
  
  def setBuildNumber(bundle_id, tag_name)
    build = ""
    if TAG_BUILD_N && tag_name != "unknown"
      build = tag_name.match(/[^.]*$/)
    else
      build = latest_testflight_build_number(app_identifier: bundle_id) + 1
    end
    
    increment_build_number(build_number: build)
  end

  def getChangeLog(env)
    sh("git fetch --all --tags --force")
    
    lastTwoTags = sh("git tag --list '#{TAG_PREFIX}*' --sort=-creatordate | head -n 2").split("\n")

    if lastTwoTags.length != 2
      return "No log message."
    end

    commits = sh("git log '#{lastTwoTags[1]}'..'#{lastTwoTags[0]}' --oneline --pretty=format:'- %s'")

    if !commits.nil? && !commits.empty?
      return commits
    else
      return "No log message."
    end
  end

  def getTagMessage(tag_name)
    tag_message = sh("git tag -l --format='%(contents)' #{tag_name} | sed '/^$/d'") || ""
    return tag_message.empty? ? "" : tag_message
  end
end
