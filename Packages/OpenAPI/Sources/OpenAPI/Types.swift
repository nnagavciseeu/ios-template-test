// Generated by swift-openapi-generator, do not modify.
@_spi(Generated) import OpenAPIRuntime
#if os(Linux)
@preconcurrency import struct Foundation.URL
@preconcurrency import struct Foundation.Data
@preconcurrency import struct Foundation.Date
#else
import struct Foundation.URL
import struct Foundation.Data
import struct Foundation.Date
#endif
/// A type that performs HTTP operations defined by the OpenAPI document.
public protocol APIProtocol: Sendable {
    /// Get Status
    ///
    /// - Remark: HTTP `GET /api`.
    /// - Remark: Generated from `#/paths//api/get(AppController_getStatus)`.
    func AppController_getStatus(_ input: Operations.AppController_getStatus.Input) async throws -> Operations.AppController_getStatus.Output
    /// Login
    ///
    /// - Remark: HTTP `POST /api/auth/login`.
    /// - Remark: Generated from `#/paths//api/auth/login/post(AuthController_login)`.
    func AuthController_login(_ input: Operations.AuthController_login.Input) async throws -> Operations.AuthController_login.Output
    /// Register
    ///
    /// - Remark: HTTP `POST /api/auth/register`.
    /// - Remark: Generated from `#/paths//api/auth/register/post(AuthController_register)`.
    func AuthController_register(_ input: Operations.AuthController_register.Input) async throws -> Operations.AuthController_register.Output
    /// Refresh Access Token
    ///
    /// - Remark: HTTP `POST /api/auth/refresh`.
    /// - Remark: Generated from `#/paths//api/auth/refresh/post(AuthController_refreshToken)`.
    func AuthController_refreshToken(_ input: Operations.AuthController_refreshToken.Input) async throws -> Operations.AuthController_refreshToken.Output
    /// Forgot Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/forgot`.
    /// - Remark: Generated from `#/paths//api/auth-password/forgot/post(AuthPasswordController_forgotPassword)`.
    func AuthPasswordController_forgotPassword(_ input: Operations.AuthPasswordController_forgotPassword.Input) async throws -> Operations.AuthPasswordController_forgotPassword.Output
    /// Reset Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/reset`.
    /// - Remark: Generated from `#/paths//api/auth-password/reset/post(AuthPasswordController_resetPassword)`.
    func AuthPasswordController_resetPassword(_ input: Operations.AuthPasswordController_resetPassword.Input) async throws -> Operations.AuthPasswordController_resetPassword.Output
    /// Get Me
    ///
    /// - Remark: HTTP `GET /api/user-me`.
    /// - Remark: Generated from `#/paths//api/user-me/get(UserMeController_getMe)`.
    func UserMeController_getMe(_ input: Operations.UserMeController_getMe.Input) async throws -> Operations.UserMeController_getMe.Output
}

/// Convenience overloads for operation inputs.
extension APIProtocol {
    /// Get Status
    ///
    /// - Remark: HTTP `GET /api`.
    /// - Remark: Generated from `#/paths//api/get(AppController_getStatus)`.
    public func AppController_getStatus(headers: Operations.AppController_getStatus.Input.Headers = .init()) async throws -> Operations.AppController_getStatus.Output {
        try await AppController_getStatus(Operations.AppController_getStatus.Input(headers: headers))
    }
    /// Login
    ///
    /// - Remark: HTTP `POST /api/auth/login`.
    /// - Remark: Generated from `#/paths//api/auth/login/post(AuthController_login)`.
    public func AuthController_login(
        headers: Operations.AuthController_login.Input.Headers = .init(),
        body: Operations.AuthController_login.Input.Body
    ) async throws -> Operations.AuthController_login.Output {
        try await AuthController_login(Operations.AuthController_login.Input(
            headers: headers,
            body: body
        ))
    }
    /// Register
    ///
    /// - Remark: HTTP `POST /api/auth/register`.
    /// - Remark: Generated from `#/paths//api/auth/register/post(AuthController_register)`.
    public func AuthController_register(
        headers: Operations.AuthController_register.Input.Headers = .init(),
        body: Operations.AuthController_register.Input.Body
    ) async throws -> Operations.AuthController_register.Output {
        try await AuthController_register(Operations.AuthController_register.Input(
            headers: headers,
            body: body
        ))
    }
    /// Refresh Access Token
    ///
    /// - Remark: HTTP `POST /api/auth/refresh`.
    /// - Remark: Generated from `#/paths//api/auth/refresh/post(AuthController_refreshToken)`.
    public func AuthController_refreshToken(
        headers: Operations.AuthController_refreshToken.Input.Headers = .init(),
        body: Operations.AuthController_refreshToken.Input.Body
    ) async throws -> Operations.AuthController_refreshToken.Output {
        try await AuthController_refreshToken(Operations.AuthController_refreshToken.Input(
            headers: headers,
            body: body
        ))
    }
    /// Forgot Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/forgot`.
    /// - Remark: Generated from `#/paths//api/auth-password/forgot/post(AuthPasswordController_forgotPassword)`.
    public func AuthPasswordController_forgotPassword(body: Operations.AuthPasswordController_forgotPassword.Input.Body) async throws -> Operations.AuthPasswordController_forgotPassword.Output {
        try await AuthPasswordController_forgotPassword(Operations.AuthPasswordController_forgotPassword.Input(body: body))
    }
    /// Reset Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/reset`.
    /// - Remark: Generated from `#/paths//api/auth-password/reset/post(AuthPasswordController_resetPassword)`.
    public func AuthPasswordController_resetPassword(body: Operations.AuthPasswordController_resetPassword.Input.Body) async throws -> Operations.AuthPasswordController_resetPassword.Output {
        try await AuthPasswordController_resetPassword(Operations.AuthPasswordController_resetPassword.Input(body: body))
    }
    /// Get Me
    ///
    /// - Remark: HTTP `GET /api/user-me`.
    /// - Remark: Generated from `#/paths//api/user-me/get(UserMeController_getMe)`.
    public func UserMeController_getMe(headers: Operations.UserMeController_getMe.Input.Headers = .init()) async throws -> Operations.UserMeController_getMe.Output {
        try await UserMeController_getMe(Operations.UserMeController_getMe.Input(headers: headers))
    }
}

/// Server URLs defined in the OpenAPI document.
public enum Servers {}

/// Types generated from the components section of the OpenAPI document.
public enum Components {
    /// Types generated from the `#/components/schemas` section of the OpenAPI document.
    public enum Schemas {
        /// - Remark: Generated from `#/components/schemas/ApiStatusDto`.
        public struct ApiStatusDto: Codable, Hashable, Sendable {
            /// Api Status Uptime
            ///
            /// - Remark: Generated from `#/components/schemas/ApiStatusDto/uptime`.
            public var uptime: Swift.String
            /// Api Status Stage
            ///
            /// - Remark: Generated from `#/components/schemas/ApiStatusDto/stage`.
            public var stage: Swift.String
            /// Api Status Version
            ///
            /// - Remark: Generated from `#/components/schemas/ApiStatusDto/version`.
            public var version: Swift.String
            /// Api Status Release (Git Hash Format)
            ///
            /// - Remark: Generated from `#/components/schemas/ApiStatusDto/release`.
            public var release: Swift.String
            /// Api Status Build Time
            ///
            /// - Remark: Generated from `#/components/schemas/ApiStatusDto/buildTime`.
            public var buildTime: Swift.String
            /// Creates a new `ApiStatusDto`.
            ///
            /// - Parameters:
            ///   - uptime: Api Status Uptime
            ///   - stage: Api Status Stage
            ///   - version: Api Status Version
            ///   - release: Api Status Release (Git Hash Format)
            ///   - buildTime: Api Status Build Time
            public init(
                uptime: Swift.String,
                stage: Swift.String,
                version: Swift.String,
                release: Swift.String,
                buildTime: Swift.String
            ) {
                self.uptime = uptime
                self.stage = stage
                self.version = version
                self.release = release
                self.buildTime = buildTime
            }
            public enum CodingKeys: String, CodingKey {
                case uptime
                case stage
                case version
                case release
                case buildTime
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthLoginDto`.
        public struct AuthLoginDto: Codable, Hashable, Sendable {
            /// Email
            ///
            /// - Remark: Generated from `#/components/schemas/AuthLoginDto/email`.
            public var email: Swift.String
            /// Password
            ///
            /// - Remark: Generated from `#/components/schemas/AuthLoginDto/password`.
            public var password: Swift.String
            /// Creates a new `AuthLoginDto`.
            ///
            /// - Parameters:
            ///   - email: Email
            ///   - password: Password
            public init(
                email: Swift.String,
                password: Swift.String
            ) {
                self.email = email
                self.password = password
            }
            public enum CodingKeys: String, CodingKey {
                case email
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthResponseDto`.
        public struct AuthResponseDto: Codable, Hashable, Sendable {
            /// Access Token
            ///
            /// - Remark: Generated from `#/components/schemas/AuthResponseDto/accessToken`.
            public var accessToken: Swift.String
            /// Refresh Token
            ///
            /// - Remark: Generated from `#/components/schemas/AuthResponseDto/refreshToken`.
            public var refreshToken: Swift.String
            /// Creates a new `AuthResponseDto`.
            ///
            /// - Parameters:
            ///   - accessToken: Access Token
            ///   - refreshToken: Refresh Token
            public init(
                accessToken: Swift.String,
                refreshToken: Swift.String
            ) {
                self.accessToken = accessToken
                self.refreshToken = refreshToken
            }
            public enum CodingKeys: String, CodingKey {
                case accessToken
                case refreshToken
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthRegisterDto`.
        public struct AuthRegisterDto: Codable, Hashable, Sendable {
            /// Email
            ///
            /// - Remark: Generated from `#/components/schemas/AuthRegisterDto/email`.
            public var email: Swift.String
            /// Password
            ///
            /// - Remark: Generated from `#/components/schemas/AuthRegisterDto/password`.
            public var password: Swift.String
            /// Creates a new `AuthRegisterDto`.
            ///
            /// - Parameters:
            ///   - email: Email
            ///   - password: Password
            public init(
                email: Swift.String,
                password: Swift.String
            ) {
                self.email = email
                self.password = password
            }
            public enum CodingKeys: String, CodingKey {
                case email
                case password
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthRefreshTokenDto`.
        public struct AuthRefreshTokenDto: Codable, Hashable, Sendable {
            /// Access Token
            ///
            /// - Remark: Generated from `#/components/schemas/AuthRefreshTokenDto/accessToken`.
            public var accessToken: Swift.String
            /// Refresh Token
            ///
            /// - Remark: Generated from `#/components/schemas/AuthRefreshTokenDto/refreshToken`.
            public var refreshToken: Swift.String
            /// Creates a new `AuthRefreshTokenDto`.
            ///
            /// - Parameters:
            ///   - accessToken: Access Token
            ///   - refreshToken: Refresh Token
            public init(
                accessToken: Swift.String,
                refreshToken: Swift.String
            ) {
                self.accessToken = accessToken
                self.refreshToken = refreshToken
            }
            public enum CodingKeys: String, CodingKey {
                case accessToken
                case refreshToken
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthPasswordForgotDto`.
        public struct AuthPasswordForgotDto: Codable, Hashable, Sendable {
            /// Email
            ///
            /// - Remark: Generated from `#/components/schemas/AuthPasswordForgotDto/email`.
            public var email: Swift.String
            /// Creates a new `AuthPasswordForgotDto`.
            ///
            /// - Parameters:
            ///   - email: Email
            public init(email: Swift.String) {
                self.email = email
            }
            public enum CodingKeys: String, CodingKey {
                case email
            }
        }
        /// - Remark: Generated from `#/components/schemas/AuthPasswordResetDto`.
        public struct AuthPasswordResetDto: Codable, Hashable, Sendable {
            /// Code
            ///
            /// - Remark: Generated from `#/components/schemas/AuthPasswordResetDto/code`.
            public var code: Swift.String
            /// New Password
            ///
            /// - Remark: Generated from `#/components/schemas/AuthPasswordResetDto/newPassword`.
            public var newPassword: Swift.String
            /// Creates a new `AuthPasswordResetDto`.
            ///
            /// - Parameters:
            ///   - code: Code
            ///   - newPassword: New Password
            public init(
                code: Swift.String,
                newPassword: Swift.String
            ) {
                self.code = code
                self.newPassword = newPassword
            }
            public enum CodingKeys: String, CodingKey {
                case code
                case newPassword
            }
        }
        /// - Remark: Generated from `#/components/schemas/UserMeDto`.
        public struct UserMeDto: Codable, Hashable, Sendable {
            /// Id
            ///
            /// - Remark: Generated from `#/components/schemas/UserMeDto/id`.
            public var id: Swift.String
            /// Email
            ///
            /// - Remark: Generated from `#/components/schemas/UserMeDto/email`.
            public var email: Swift.String
            /// Creates a new `UserMeDto`.
            ///
            /// - Parameters:
            ///   - id: Id
            ///   - email: Email
            public init(
                id: Swift.String,
                email: Swift.String
            ) {
                self.id = id
                self.email = email
            }
            public enum CodingKeys: String, CodingKey {
                case id
                case email
            }
        }
    }
    /// Types generated from the `#/components/parameters` section of the OpenAPI document.
    public enum Parameters {}
    /// Types generated from the `#/components/requestBodies` section of the OpenAPI document.
    public enum RequestBodies {}
    /// Types generated from the `#/components/responses` section of the OpenAPI document.
    public enum Responses {}
    /// Types generated from the `#/components/headers` section of the OpenAPI document.
    public enum Headers {}
}

/// API operations, with input and output types, generated from `#/paths` in the OpenAPI document.
public enum Operations {
    /// Get Status
    ///
    /// - Remark: HTTP `GET /api`.
    /// - Remark: Generated from `#/paths//api/get(AppController_getStatus)`.
    public enum AppController_getStatus {
        public static let id: Swift.String = "AppController_getStatus"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppController_getStatus.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AppController_getStatus.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.AppController_getStatus.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.AppController_getStatus.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.ApiStatusDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.ApiStatusDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.AppController_getStatus.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AppController_getStatus.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/get(AppController_getStatus)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AppController_getStatus.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AppController_getStatus.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Login
    ///
    /// - Remark: HTTP `POST /api/auth/login`.
    /// - Remark: Generated from `#/paths//api/auth/login/post(AuthController_login)`.
    public enum AuthController_login {
        public static let id: Swift.String = "AuthController_login"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/auth/login/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_login.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_login.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.AuthController_login.Input.Headers
            /// - Remark: Generated from `#/paths/api/auth/login/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/login/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AuthLoginDto)
            }
            public var body: Operations.AuthController_login.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AuthController_login.Input.Headers = .init(),
                body: Operations.AuthController_login.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/login/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/auth/login/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AuthResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AuthResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.AuthController_login.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AuthController_login.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/auth/login/post(AuthController_login)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_login.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AuthController_login.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Register
    ///
    /// - Remark: HTTP `POST /api/auth/register`.
    /// - Remark: Generated from `#/paths//api/auth/register/post(AuthController_register)`.
    public enum AuthController_register {
        public static let id: Swift.String = "AuthController_register"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/auth/register/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_register.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_register.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.AuthController_register.Input.Headers
            /// - Remark: Generated from `#/paths/api/auth/register/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/register/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AuthRegisterDto)
            }
            public var body: Operations.AuthController_register.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AuthController_register.Input.Headers = .init(),
                body: Operations.AuthController_register.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/register/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/auth/register/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AuthResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AuthResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.AuthController_register.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AuthController_register.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/auth/register/post(AuthController_register)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_register.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AuthController_register.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Refresh Access Token
    ///
    /// - Remark: HTTP `POST /api/auth/refresh`.
    /// - Remark: Generated from `#/paths//api/auth/refresh/post(AuthController_refreshToken)`.
    public enum AuthController_refreshToken {
        public static let id: Swift.String = "AuthController_refreshToken"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/auth/refresh/POST/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_refreshToken.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.AuthController_refreshToken.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.AuthController_refreshToken.Input.Headers
            /// - Remark: Generated from `#/paths/api/auth/refresh/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/refresh/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AuthRefreshTokenDto)
            }
            public var body: Operations.AuthController_refreshToken.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            ///   - body:
            public init(
                headers: Operations.AuthController_refreshToken.Input.Headers = .init(),
                body: Operations.AuthController_refreshToken.Input.Body
            ) {
                self.headers = headers
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth/refresh/POST/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/auth/refresh/POST/responses/200/content/application\/json`.
                    case json(Components.Schemas.AuthResponseDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.AuthResponseDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.AuthController_refreshToken.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.AuthController_refreshToken.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/auth/refresh/post(AuthController_refreshToken)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.AuthController_refreshToken.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.AuthController_refreshToken.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
    /// Forgot Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/forgot`.
    /// - Remark: Generated from `#/paths//api/auth-password/forgot/post(AuthPasswordController_forgotPassword)`.
    public enum AuthPasswordController_forgotPassword {
        public static let id: Swift.String = "AuthPasswordController_forgotPassword"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/auth-password/forgot/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth-password/forgot/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AuthPasswordForgotDto)
            }
            public var body: Operations.AuthPasswordController_forgotPassword.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            public init(body: Operations.AuthPasswordController_forgotPassword.Input.Body) {
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                public init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/auth-password/forgot/post(AuthPasswordController_forgotPassword)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.AuthPasswordController_forgotPassword.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.AuthPasswordController_forgotPassword.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// Reset Auth Password
    ///
    /// - Remark: HTTP `POST /api/auth-password/reset`.
    /// - Remark: Generated from `#/paths//api/auth-password/reset/post(AuthPasswordController_resetPassword)`.
    public enum AuthPasswordController_resetPassword {
        public static let id: Swift.String = "AuthPasswordController_resetPassword"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/auth-password/reset/POST/requestBody`.
            @frozen public enum Body: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/auth-password/reset/POST/requestBody/content/application\/json`.
                case json(Components.Schemas.AuthPasswordResetDto)
            }
            public var body: Operations.AuthPasswordController_resetPassword.Input.Body
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - body:
            public init(body: Operations.AuthPasswordController_resetPassword.Input.Body) {
                self.body = body
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Created: Sendable, Hashable {
                /// Creates a new `Created`.
                public init() {}
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/auth-password/reset/post(AuthPasswordController_resetPassword)/responses/201`.
            ///
            /// HTTP response code: `201 created`.
            case created(Operations.AuthPasswordController_resetPassword.Output.Created)
            /// The associated value of the enum case if `self` is `.created`.
            ///
            /// - Throws: An error if `self` is not `.created`.
            /// - SeeAlso: `.created`.
            public var created: Operations.AuthPasswordController_resetPassword.Output.Created {
                get throws {
                    switch self {
                    case let .created(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "created",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
    }
    /// Get Me
    ///
    /// - Remark: HTTP `GET /api/user-me`.
    /// - Remark: Generated from `#/paths//api/user-me/get(UserMeController_getMe)`.
    public enum UserMeController_getMe {
        public static let id: Swift.String = "UserMeController_getMe"
        public struct Input: Sendable, Hashable {
            /// - Remark: Generated from `#/paths/api/user-me/GET/header`.
            public struct Headers: Sendable, Hashable {
                public var accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserMeController_getMe.AcceptableContentType>]
                /// Creates a new `Headers`.
                ///
                /// - Parameters:
                ///   - accept:
                public init(accept: [OpenAPIRuntime.AcceptHeaderContentType<Operations.UserMeController_getMe.AcceptableContentType>] = .defaultValues()) {
                    self.accept = accept
                }
            }
            public var headers: Operations.UserMeController_getMe.Input.Headers
            /// Creates a new `Input`.
            ///
            /// - Parameters:
            ///   - headers:
            public init(headers: Operations.UserMeController_getMe.Input.Headers = .init()) {
                self.headers = headers
            }
        }
        @frozen public enum Output: Sendable, Hashable {
            public struct Ok: Sendable, Hashable {
                /// - Remark: Generated from `#/paths/api/user-me/GET/responses/200/content`.
                @frozen public enum Body: Sendable, Hashable {
                    /// - Remark: Generated from `#/paths/api/user-me/GET/responses/200/content/application\/json`.
                    case json(Components.Schemas.UserMeDto)
                    /// The associated value of the enum case if `self` is `.json`.
                    ///
                    /// - Throws: An error if `self` is not `.json`.
                    /// - SeeAlso: `.json`.
                    public var json: Components.Schemas.UserMeDto {
                        get throws {
                            switch self {
                            case let .json(body):
                                return body
                            }
                        }
                    }
                }
                /// Received HTTP response body
                public var body: Operations.UserMeController_getMe.Output.Ok.Body
                /// Creates a new `Ok`.
                ///
                /// - Parameters:
                ///   - body: Received HTTP response body
                public init(body: Operations.UserMeController_getMe.Output.Ok.Body) {
                    self.body = body
                }
            }
            ///
            ///
            /// - Remark: Generated from `#/paths//api/user-me/get(UserMeController_getMe)/responses/200`.
            ///
            /// HTTP response code: `200 ok`.
            case ok(Operations.UserMeController_getMe.Output.Ok)
            /// The associated value of the enum case if `self` is `.ok`.
            ///
            /// - Throws: An error if `self` is not `.ok`.
            /// - SeeAlso: `.ok`.
            public var ok: Operations.UserMeController_getMe.Output.Ok {
                get throws {
                    switch self {
                    case let .ok(response):
                        return response
                    default:
                        try throwUnexpectedResponseStatus(
                            expectedStatus: "ok",
                            response: self
                        )
                    }
                }
            }
            /// Undocumented response.
            ///
            /// A response with a code that is not documented in the OpenAPI document.
            case undocumented(statusCode: Swift.Int, OpenAPIRuntime.UndocumentedPayload)
        }
        @frozen public enum AcceptableContentType: AcceptableProtocol {
            case json
            case other(Swift.String)
            public init?(rawValue: Swift.String) {
                switch rawValue.lowercased() {
                case "application/json":
                    self = .json
                default:
                    self = .other(rawValue)
                }
            }
            public var rawValue: Swift.String {
                switch self {
                case let .other(string):
                    return string
                case .json:
                    return "application/json"
                }
            }
            public static var allCases: [Self] {
                [
                    .json
                ]
            }
        }
    }
}
